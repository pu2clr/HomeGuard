#!/bin/bash
#
# Script para aplicar corre√ß√£o espec√≠fica do painel de temperatura
#

echo "üå°Ô∏è Aplicando Corre√ß√£o - Painel de Temperatura"
echo "=============================================="

# Configura√ß√µes
PI_USER="homeguard"
PI_HOST="100.87.71.125"
PI_PATH="/home/homeguard/HomeGuard/web/templates"
LOCAL_TEMPLATES="web/templates"

echo "üîß Problema: 'time' is not a registered controller"
echo "‚úÖ Solu√ß√£o: Verifica√ß√£o robusta + fallback para escala linear"
echo ""

# Verificar conectividade
echo "1Ô∏è‚É£ Testando conectividade..."
if ping -c 1 $PI_HOST >/dev/null 2>&1; then
    echo "   ‚úÖ Raspberry Pi acess√≠vel"
else
    echo "   ‚ùå Raspberry Pi n√£o acess√≠vel"
    echo "   Verifique a conex√£o de rede"
    exit 1
fi

# Fazer backup espec√≠fico
echo ""
echo "2Ô∏è‚É£ Fazendo backup dos templates de temperatura..."
ssh $PI_USER@$PI_HOST "
    cd $PI_PATH
    
    # Criar diret√≥rio de backup se n√£o existir
    if [ ! -d backups ]; then
        mkdir -p backups
    fi
    
    BACKUP_DIR=\"backups/temp-chart-fix-\$(date +%Y%m%d-%H%M%S)\"
    mkdir -p \$BACKUP_DIR
    
    echo 'Backup espec√≠fico criado em: '\$BACKUP_DIR
    
    # Backup dos templates relacionados √† temperatura
    cp base.html \$BACKUP_DIR/ 2>/dev/null || echo 'base.html n√£o encontrado'
    cp temperature_panel.html \$BACKUP_DIR/ 2>/dev/null || echo 'temperature_panel.html n√£o encontrado'
    cp temperature_debug.html \$BACKUP_DIR/ 2>/dev/null || echo 'temperature_debug.html n√£o encontrado'
    
    ls -la \$BACKUP_DIR/
"

# Transferir apenas templates corrigidos
echo ""
echo "3Ô∏è‚É£ Transferindo templates corrigidos..."

TEMPLATES=(
    "base.html"
    "temperature_panel.html"
)

for template in "${TEMPLATES[@]}"; do
    echo "   üìÑ Transferindo $template..."
    scp "$LOCAL_TEMPLATES/$template" "$PI_USER@$PI_HOST:$PI_PATH/"
    
    if [ $? -eq 0 ]; then
        echo "   ‚úÖ $template transferido com sucesso"
    else
        echo "   ‚ùå Erro ao transferir $template"
        exit 1
    fi
done

# Ajustar permiss√µes
echo ""
echo "4Ô∏è‚É£ Ajustando permiss√µes..."
ssh $PI_USER@$PI_HOST "
    cd $PI_PATH
    chown $PI_USER:$PI_USER base.html temperature_panel.html
    chmod 644 base.html temperature_panel.html
    echo 'Permiss√µes ajustadas'
"

# Reiniciar apenas o dashboard
echo ""
echo "5Ô∏è‚É£ Reiniciando dashboard..."
ssh $PI_USER@$PI_HOST "
    # Tentar parar o servi√ßo graciosamente
    sudo systemctl restart homeguard-dashboard 2>/dev/null || {
        echo 'Servi√ßo systemd n√£o encontrado, tentando pkill...'
        sudo pkill -f dashboard.py
        sleep 2
    }
    
    echo 'Dashboard reiniciado'
"

# Aguardar inicializa√ß√£o
echo ""
echo "6Ô∏è‚É£ Aguardando inicializa√ß√£o..."
sleep 5

# Testar resultado espec√≠fico
echo ""
echo "7Ô∏è‚É£ Testando corre√ß√£o..."

echo "   üåê Testando p√°gina de temperatura..."
RESPONSE=$(curl -s -w "%{http_code}" -o /dev/null "http://$PI_HOST:5000/temperature" 2>/dev/null || echo "000")
if [ "$RESPONSE" = "200" ]; then
    echo "   ‚úÖ P√°gina de temperatura carregando ($RESPONSE)"
else
    echo "   ‚ùå P√°gina com problemas ($RESPONSE)"
fi

echo "   üìä Testando API de dados..."
TEMP_API=$(curl -s "http://$PI_HOST:5000/api/temperature/data" 2>/dev/null | head -c 50)
if echo "$TEMP_API" | grep -q "{"; then
    echo "   ‚úÖ API de temperatura funcionando"
else
    echo "   ‚ùå API com problemas"
fi

echo ""
echo "‚úÖ Corre√ß√£o aplicada com sucesso!"
echo ""
echo "üß™ TESTE MANUAL OBRIGAT√ìRIO:"
echo "   1. Acesse: http://$PI_HOST:5000/temperature"
echo "   2. Abra Console do navegador (F12)"
echo "   3. Procure por mensagens:"
echo "      ‚Ä¢ 'Chart.js vers√£o: X.X.X'"
echo "      ‚Ä¢ 'Escala de tempo: Dispon√≠vel/N√£o dispon√≠vel'"
echo "      ‚Ä¢ 'Gr√°fico criado com sucesso, escala: time/linear'"
echo "   4. Clique em 'Atualizar' para carregar dados"
echo "   5. Verifique se o gr√°fico aparece SEM ERRO"
echo ""
echo "üéØ EXPECTATIVA:"
echo "   ‚ùå ANTES: Erro 'time' is not a registered controller"
echo "   ‚úÖ DEPOIS: Gr√°fico renderiza (escala time ou linear)"
echo ""
echo "üìã Se ainda houver problemas:"
echo "   - Verifique logs: sudo journalctl -u homeguard-dashboard -f"
echo "   - Verifique console do navegador para mensagens detalhadas"
echo "   - Execute: ./scripts/test-temperature-chart-fix.sh"
echo ""
echo "üíæ Backup criado em: $PI_PATH/backups/"
echo "   Para rollback: ssh $PI_USER@$PI_HOST 'cd $PI_PATH && cp backups/[DIR]/* .'"
