#!/bin/bash

# Script de teste para Grid Monitor ESP32-C3
# Verifica corre√ß√£o do erro WDT timeout

echo "üîß TESTE DE CORRE√á√ÉO - GRID MONITOR ESP32-C3"
echo "=============================================="
echo ""

# Configura√ß√µes
MQTT_HOST="192.168.1.102"
MQTT_USER="homeguard"
MQTT_PASS="pu2clr123456"
DEVICE_TOPIC="home/grid/GRID_MONITOR_C3B"
DEVICE_PORT="/dev/ttyUSB0"  # Ajustar conforme necess√°rio

# Fun√ß√£o para testar MQTT
test_mqtt() {
    echo "üì° Testando comunica√ß√£o MQTT..."
    
    # Solicitar status
    echo "‚Üí Solicitando status do device..."
    mosquitto_pub -h $MQTT_HOST -u $MQTT_USER -P $MQTT_PASS \
        -t "${DEVICE_TOPIC}/command" -m "STATUS"
    
    sleep 2
    
    # Testar comando ON
    echo "‚Üí Testando comando ON..."
    mosquitto_pub -h $MQTT_HOST -u $MQTT_USER -P $MQTT_PASS \
        -t "${DEVICE_TOPIC}/command" -m "ON"
    
    sleep 2
    
    # Testar comando OFF
    echo "‚Üí Testando comando OFF..."
    mosquitto_pub -h $MQTT_HOST -u $MQTT_USER -P $MQTT_PASS \
        -t "${DEVICE_TOPIC}/command" -m "OFF"
    
    sleep 2
    
    # Voltar para AUTO
    echo "‚Üí Retornando para modo AUTO..."
    mosquitto_pub -h $MQTT_HOST -u $MQTT_USER -P $MQTT_PASS \
        -t "${DEVICE_TOPIC}/command" -m "AUTO"
    
    echo "‚úÖ Testes MQTT enviados"
}

# Fun√ß√£o para testar calibra√ß√£o do sensor
test_sensor_calibration() {
    echo "üîß Testando calibra√ß√£o do sensor ZMPT101B..."
    
    echo "‚Üí Aplicando preset residencial..."
    mosquitto_pub -h $MQTT_HOST -u $MQTT_USER -P $MQTT_PASS \
        -t "${DEVICE_TOPIC}/command" -m "PRESET_RESIDENTIAL"
    
    sleep 2
    
    echo "‚Üí Solicitando relat√≥rio de calibra√ß√£o..."
    mosquitto_pub -h $MQTT_HOST -u $MQTT_USER -P $MQTT_PASS \
        -t "${DEVICE_TOPIC}/command" -m "CALIBRATION_REPORT"
    
    sleep 2
    
    echo "‚Üí Solicitando estat√≠sticas de tens√£o..."
    mosquitto_pub -h $MQTT_HOST -u $MQTT_USER -P $MQTT_PASS \
        -t "${DEVICE_TOPIC}/command" -m "VOLTAGE_STATS"
    
    echo "‚úÖ Testes de calibra√ß√£o enviados"
    echo "üìä Monitore os logs do device para ver os resultados"
}

# Fun√ß√£o para monitorar logs
monitor_logs() {
    echo "üìä Monitorando logs do device (pressione Ctrl+C para parar)..."
    echo ""
    
    if command -v mpremote &> /dev/null; then
        echo "Usando mpremote para monitorar..."
        mpremote connect $DEVICE_PORT
    elif command -v screen &> /dev/null; then
        echo "Usando screen para monitorar..."
        echo "Para sair: Ctrl+A, depois K"
        screen $DEVICE_PORT 115200
    else
        echo "‚ùå mpremote ou screen n√£o encontrado"
        echo "Instale com: pip install mpremote"
        echo "Ou: sudo apt-get install screen"
    fi
}

# Fun√ß√£o para monitorar status MQTT
monitor_mqtt() {
    echo "üì° Monitorando status MQTT (pressione Ctrl+C para parar)..."
    echo ""
    
    mosquitto_sub -h $MQTT_HOST -u $MQTT_USER -P $MQTT_PASS \
        -t "${DEVICE_TOPIC}/status" -v
}

# Fun√ß√£o para upload do arquivo corrigido
upload_fix() {
    echo "üì§ Fazendo upload do arquivo corrigido..."
    
    if [ ! -f "main_fixed.py" ]; then
        echo "‚ùå Arquivo main_fixed.py n√£o encontrado!"
        echo "Certifique-se de estar na pasta correta:"
        echo "cd source/Micropython/grid_monitor"
        exit 1
    fi
    
    # Backup do arquivo atual
    if command -v mpremote &> /dev/null; then
        echo "‚Üí Fazendo backup do main.py atual..."
        mpremote connect $DEVICE_PORT fs cp :main.py :main_backup.py 2>/dev/null || true
        
        echo "‚Üí Enviando arquivo corrigido..."
        mpremote connect $DEVICE_PORT fs cp main_fixed.py :main.py
        
        echo "‚Üí Reiniciando device..."
        mpremote connect $DEVICE_PORT reset
        
        echo "‚úÖ Upload conclu√≠do e device reiniciado"
        sleep 3
    else
        echo "‚ùå mpremote n√£o encontrado!"
        echo "Instale com: pip install mpremote"
        exit 1
    fi
}

# Fun√ß√£o para diagn√≥stico completo
full_diagnostic() {
    echo "üîç DIAGN√ìSTICO COMPLETO"
    echo "======================"
    echo ""
    
    echo "1. Verificando conectividade MQTT..."
    if mosquitto_pub -h $MQTT_HOST -u $MQTT_USER -P $MQTT_PASS \
        -t "test/connection" -m "test" 2>/dev/null; then
        echo "‚úÖ MQTT broker acess√≠vel"
    else
        echo "‚ùå MQTT broker inacess√≠vel"
        echo "Verifique se o broker est√° rodando em $MQTT_HOST"
    fi
    
    echo ""
    echo "2. Verificando device serial..."
    if [ -e "$DEVICE_PORT" ]; then
        echo "‚úÖ Device serial encontrado em $DEVICE_PORT"
    else
        echo "‚ùå Device serial n√£o encontrado em $DEVICE_PORT"
        echo "Devices dispon√≠veis:"
        ls /dev/tty* | grep -E "(USB|ACM)" || echo "Nenhum device USB encontrado"
    fi
    
    echo ""
    echo "3. Verificando depend√™ncias..."
    
    if command -v mosquitto_pub &> /dev/null; then
        echo "‚úÖ mosquitto-clients instalado"
    else
        echo "‚ùå mosquitto-clients n√£o encontrado"
        echo "Instale com: sudo apt-get install mosquitto-clients"
    fi
    
    if command -v mpremote &> /dev/null; then
        echo "‚úÖ mpremote instalado"
    else
        echo "‚ùå mpremote n√£o encontrado"
        echo "Instale com: pip install mpremote"
    fi
    
    echo ""
    echo "4. Testando comunica√ß√£o com device..."
    test_mqtt
}

# Menu principal
show_menu() {
    echo ""
    echo "OP√á√ïES DISPON√çVEIS:"
    echo "1. Upload da corre√ß√£o (main_fixed.py)"
    echo "2. Testar comandos MQTT"
    echo "3. Testar calibra√ß√£o do sensor"
    echo "4. Monitorar logs do device"
    echo "5. Monitorar status MQTT"
    echo "6. Diagn√≥stico completo"
    echo "7. Sair"
    echo ""
    read -p "Escolha uma op√ß√£o (1-7): " choice
    
    case $choice in
        1)
            upload_fix
            ;;
        2)
            test_mqtt
            ;;
        3)
            test_sensor_calibration
            ;;
        4)
            monitor_logs
            ;;
        5)
            monitor_mqtt
            ;;
        6)
            full_diagnostic
            ;;
        7)
            echo "üëã Saindo..."
            exit 0
            ;;
        *)
            echo "‚ùå Op√ß√£o inv√°lida!"
            ;;
    esac
}

# Verificar argumentos da linha de comando
if [ "$1" = "upload" ]; then
    upload_fix
elif [ "$1" = "test" ]; then
    test_mqtt
elif [ "$1" = "calibration" ]; then
    test_sensor_calibration
elif [ "$1" = "monitor" ]; then
    monitor_logs
elif [ "$1" = "mqtt" ]; then
    monitor_mqtt
elif [ "$1" = "diagnostic" ]; then
    full_diagnostic
else
    # Menu interativo
    while true; do
        show_menu
        echo ""
        read -p "Pressione Enter para continuar ou Ctrl+C para sair..."
    done
fi