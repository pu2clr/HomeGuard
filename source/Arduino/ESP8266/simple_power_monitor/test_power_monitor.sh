#!/bin/bash
#
# Script de teste para Simple Power Monitor
# Testa comandos MQTT e monitora respostas
#

echo "üß™ TESTE: Simple Power Monitor"
echo "==============================="
echo ""

# Configura√ß√£o
BROKER="192.168.1.102"
PORT="1883"
USER="homeguard"
PASS="pu2clr123456"
DEVICE_ID="POWER_MONITOR_01"

# T√≥picos
TOPIC_COMMAND="home/power/$DEVICE_ID/command"
TOPIC_STATUS="home/power/$DEVICE_ID/status"
TOPIC_ALERT="home/power/$DEVICE_ID/alert"
TOPIC_INFO="home/power/$DEVICE_ID/info"

echo "üìã Configura√ß√£o do Teste:"
echo "   üè† Broker: $BROKER:$PORT"
echo "   üÜî Device: $DEVICE_ID"
echo "   üì° T√≥picos:"
echo "      - Command: $TOPIC_COMMAND"
echo "      - Status:  $TOPIC_STATUS"
echo "      - Alert:   $TOPIC_ALERT"
echo "      - Info:    $TOPIC_INFO"
echo ""

# Fun√ß√£o para verificar conectividade
check_broker() {
    echo "üîç Verificando conectividade MQTT..."
    timeout 3 mosquitto_sub -h $BROKER -p $PORT -u $USER -P $PASS -t "test" -C 1 >/dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "   ‚úÖ Broker MQTT acess√≠vel"
        return 0
    else
        echo "   ‚ùå Broker MQTT inacess√≠vel"
        return 1
    fi
}

# Fun√ß√£o para monitorar t√≥pico
monitor_topic() {
    local topic=$1
    local duration=${2:-5}
    local description=$3
    
    echo "   üì° Monitorando $description por ${duration}s..."
    timeout $duration mosquitto_sub -h $BROKER -p $PORT -u $USER -P $PASS -t "$topic" -v 2>/dev/null | while read line; do
        echo "      üì® $line"
    done
}

# Fun√ß√£o para enviar comando
send_command() {
    local command=$1
    local description=$2
    
    echo "   üì§ Enviando comando: $command ($description)"
    mosquitto_pub -h $BROKER -p $PORT -u $USER -P $PASS -t "$TOPIC_COMMAND" -m "$command" 2>/dev/null
    
    if [ $? -eq 0 ]; then
        echo "      ‚úÖ Comando enviado"
    else
        echo "      ‚ùå Falha ao enviar comando"
    fi
}

# Verificar conectividade primeiro
if ! check_broker; then
    echo ""
    echo "‚ùå N√£o √© poss√≠vel conectar ao broker MQTT"
    echo "   üîß Verifique:"
    echo "      - IP do broker: $BROKER"
    echo "      - Credenciais: $USER / $PASS"
    echo "      - Firewall/conectividade"
    exit 1
fi

echo ""
echo "1Ô∏è‚É£ TESTE DE INFORMA√á√ïES DO DISPOSITIVO"
echo "======================================"

echo "   üîç Solicitando informa√ß√µes do dispositivo..."
send_command "INFO" "Solicitar informa√ß√µes"

echo ""
echo "   üì° Aguardando resposta (10 segundos)..."
monitor_topic "$TOPIC_INFO" 10 "informa√ß√µes do dispositivo"

echo ""
echo "2Ô∏è‚É£ TESTE DE STATUS"
echo "=================="

send_command "STATUS" "Solicitar status atual"

echo ""
echo "   üì° Aguardando status (10 segundos)..."
monitor_topic "$TOPIC_STATUS" 10 "status do dispositivo"

echo ""
echo "3Ô∏è‚É£ TESTE DE LEITURA FOR√áADA"
echo "=========================="

send_command "READ" "For√ßar leitura do sensor"

echo ""
echo "   üì° Aguardando dados (5 segundos)..."
monitor_topic "$TOPIC_STATUS" 5 "dados do sensor"

echo ""
echo "4Ô∏è‚É£ TESTE DE CONTROLE MANUAL DO REL√â"
echo "=================================="

echo "   üîå Testando comando ON..."
send_command "ON" "Ligar rel√© manualmente"
sleep 2

echo ""
echo "   üîå Testando comando OFF..."
send_command "OFF" "Desligar rel√© manualmente"
sleep 2

echo ""
echo "   üîÑ Voltando ao modo autom√°tico..."
send_command "AUTO" "Modo autom√°tico"
sleep 2

echo ""
echo "5Ô∏è‚É£ MONITORAMENTO CONT√çNUO"
echo "========================"

echo "   üìä Op√ß√µes de monitoramento cont√≠nuo:"
echo ""
echo "   A) Monitorar alertas de energia:"
echo "      mosquitto_sub -h $BROKER -u $USER -P $PASS -t '$TOPIC_ALERT' -v"
echo ""
echo "   B) Monitorar status geral:"
echo "      mosquitto_sub -h $BROKER -u $USER -P $PASS -t '$TOPIC_STATUS' -v"
echo ""
echo "   C) Monitorar todos os t√≥picos:"
echo "      mosquitto_sub -h $BROKER -u $USER -P $PASS -t 'home/power/$DEVICE_ID/#' -v"
echo ""

read -p "   ‚ùì Deseja iniciar monitoramento cont√≠nuo? (y/N): " monitor

if [ "$monitor" = "y" ] || [ "$monitor" = "Y" ]; then
    echo ""
    echo "üîÑ MONITORAMENTO CONT√çNUO INICIADO"
    echo "================================="
    echo "   Pressione Ctrl+C para sair"
    echo ""
    
    # Monitorar todos os t√≥picos do dispositivo
    mosquitto_sub -h $BROKER -p $PORT -u $USER -P $PASS -t "home/power/$DEVICE_ID/#" -v
fi

echo ""
echo "‚úÖ TESTE CONCLU√çDO"
echo "=================="
echo ""
echo "üìä COMANDOS √öTEIS PARA MONITORAMENTO:"
echo ""
echo "üîç Verificar se dispositivo est√° online:"
echo "   mosquitto_pub -h $BROKER -u $USER -P $PASS -t '$TOPIC_COMMAND' -m 'STATUS'"
echo ""
echo "üö® Monitorar alertas de falta de energia:"
echo "   mosquitto_sub -h $BROKER -u $USER -P $PASS -t '$TOPIC_ALERT' -v"
echo ""
echo "üíì Monitorar heartbeat (a cada 5 min):"
echo "   mosquitto_sub -h $BROKER -u $USER -P $PASS -t '$TOPIC_STATUS' -v"
echo ""
echo "üîß Teste manual de rel√©:"
echo "   mosquitto_pub -h $BROKER -u $USER -P $PASS -t '$TOPIC_COMMAND' -m 'ON'"
echo "   mosquitto_pub -h $BROKER -u $USER -P $PASS -t '$TOPIC_COMMAND' -m 'OFF'"
echo "   mosquitto_pub -h $BROKER -u $USER -P $PASS -t '$TOPIC_COMMAND' -m 'AUTO'"
echo ""
echo "üéØ PR√ìXIMOS PASSOS:"
echo "   1. Verificar se ESP8266 est√° funcionando (Serial Monitor)"
echo "   2. Testar detec√ß√£o desligando disjuntor"
echo "   3. Verificar acionamento do rel√©"
echo "   4. Monitorar no dashboard HomeGuard"
