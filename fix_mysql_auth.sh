#!/bin/bash
# Script para corrigir autentica√ß√£o remota MySQL/MariaDB
# HomeGuard - Fix Remote Authentication

echo "üîß HomeGuard - Corrigindo Autentica√ß√£o Remota MySQL/MariaDB"
echo "=========================================================="

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Detectar IP do cliente (seu Mac)
CLIENT_IP=$(who am i 2>/dev/null | awk '{print $5}' | tr -d '()')
if [[ -z "$CLIENT_IP" ]]; then
    CLIENT_IP="192.168.1.205"  # IP detectado do erro
fi

echo -e "${BLUE}üîç IP do cliente detectado: ${CLIENT_IP}${NC}"

# Verificar se MariaDB/MySQL est√° rodando
if systemctl is-active --quiet mariadb; then
    SERVICE="mariadb"
    echo -e "${GREEN}‚úÖ MariaDB est√° rodando${NC}"
elif systemctl is-active --quiet mysql; then
    SERVICE="mysql"
    echo -e "${GREEN}‚úÖ MySQL est√° rodando${NC}"
else
    echo -e "${RED}‚ùå Nem MariaDB nem MySQL est√£o rodando!${NC}"
    echo -e "${YELLOW}üí° Execute: sudo systemctl start mariadb${NC}"
    exit 1
fi

echo -e "\n${BLUE}üîß Corrigindo autentica√ß√£o remota...${NC}"

# Criar script SQL para corre√ß√£o
cat > /tmp/fix_remote_auth.sql << EOF
-- Mostrar usu√°rios atuais
SELECT 'Usu√°rios antes da corre√ß√£o:' as info;
SELECT User, Host, plugin, authentication_string FROM mysql.user WHERE User IN ('root', 'homeguard');

-- Remover usu√°rios problem√°ticos
DROP USER IF EXISTS 'root'@'${CLIENT_IP}';
DROP USER IF EXISTS 'homeguard'@'${CLIENT_IP}';

-- Criar/atualizar usu√°rio homeguard para qualquer IP (%)
CREATE USER IF NOT EXISTS 'homeguard'@'%' IDENTIFIED BY 'homeguard123';
GRANT ALL PRIVILEGES ON homeguard.* TO 'homeguard'@'%';

-- Criar/atualizar usu√°rio root para qualquer IP (%)
CREATE USER IF NOT EXISTS 'root'@'%' IDENTIFIED BY 'root123';
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;

-- Criar usu√°rios espec√≠ficos para seu IP
CREATE USER IF NOT EXISTS 'homeguard'@'${CLIENT_IP}' IDENTIFIED BY 'homeguard123';
GRANT ALL PRIVILEGES ON homeguard.* TO 'homeguard'@'${CLIENT_IP}';

CREATE USER IF NOT EXISTS 'root'@'${CLIENT_IP}' IDENTIFIED BY 'root123';
GRANT ALL PRIVILEGES ON *.* TO 'root'@'${CLIENT_IP}' WITH GRANT OPTION;

-- Garantir plugin correto para MariaDB/MySQL 8+
UPDATE mysql.user SET plugin='mysql_native_password' WHERE User='homeguard';
UPDATE mysql.user SET plugin='mysql_native_password' WHERE User='root';

-- Para MariaDB 10.4+, pode ser necess√°rio usar plugin diferente
UPDATE mysql.user SET plugin='' WHERE User='homeguard' AND plugin='unix_socket';
UPDATE mysql.user SET plugin='' WHERE User='root' AND plugin='unix_socket';

-- Aplicar mudan√ßas
FLUSH PRIVILEGES;

-- Mostrar usu√°rios ap√≥s corre√ß√£o
SELECT 'Usu√°rios ap√≥s corre√ß√£o:' as info;
SELECT User, Host, plugin FROM mysql.user WHERE User IN ('root', 'homeguard') ORDER BY User, Host;

-- Testar cria√ß√£o do database
CREATE DATABASE IF NOT EXISTS homeguard CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

-- Mostrar databases
SHOW DATABASES;
EOF

echo -e "${YELLOW}üìù Executando corre√ß√µes SQL...${NC}"
if sudo mysql < /tmp/fix_remote_auth.sql; then
    echo -e "${GREEN}‚úÖ Corre√ß√µes aplicadas com sucesso!${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Erro na corre√ß√£o, tentando m√©todo alternativo...${NC}"
    
    # M√©todo alternativo direto
    echo -e "${YELLOW}üîÑ Aplicando corre√ß√µes diretamente...${NC}"
    
    # Corrigir usu√°rios um por um
    sudo mysql -e "CREATE USER IF NOT EXISTS 'homeguard'@'%' IDENTIFIED BY 'homeguard123';" 2>/dev/null
    sudo mysql -e "CREATE USER IF NOT EXISTS 'root'@'%' IDENTIFIED BY 'root123';" 2>/dev/null
    sudo mysql -e "CREATE USER IF NOT EXISTS 'homeguard'@'${CLIENT_IP}' IDENTIFIED BY 'homeguard123';" 2>/dev/null  
    sudo mysql -e "CREATE USER IF NOT EXISTS 'root'@'${CLIENT_IP}' IDENTIFIED BY 'root123';" 2>/dev/null
    
    # Aplicar permiss√µes
    sudo mysql -e "GRANT ALL PRIVILEGES ON homeguard.* TO 'homeguard'@'%';" 2>/dev/null
    sudo mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;" 2>/dev/null
    sudo mysql -e "GRANT ALL PRIVILEGES ON homeguard.* TO 'homeguard'@'${CLIENT_IP}';" 2>/dev/null
    sudo mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'${CLIENT_IP}' WITH GRANT OPTION;" 2>/dev/null
    
    # Corrigir plugin de autentica√ß√£o
    sudo mysql -e "UPDATE mysql.user SET plugin='mysql_native_password' WHERE User IN ('homeguard', 'root');" 2>/dev/null
    sudo mysql -e "FLUSH PRIVILEGES;" 2>/dev/null
    
    # Criar database
    sudo mysql -e "CREATE DATABASE IF NOT EXISTS homeguard CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;" 2>/dev/null
    
    echo -e "${GREEN}‚úÖ Corre√ß√µes alternativas aplicadas!${NC}"
fi

# Limpar arquivo tempor√°rio
rm -f /tmp/fix_remote_auth.sql

echo -e "\n${BLUE}üîÑ Reiniciando MySQL/MariaDB...${NC}"
if sudo systemctl restart $SERVICE; then
    echo -e "${GREEN}‚úÖ Servi√ßo reiniciado com sucesso!${NC}"
    sleep 3
else
    echo -e "${RED}‚ùå Erro ao reiniciar servi√ßo${NC}"
    exit 1
fi

echo -e "\n${BLUE}üß™ Testando autentica√ß√£o...${NC}"

# Testar usu√°rio homeguard
echo -e "${YELLOW}Testando usu√°rio homeguard...${NC}"
if mysql -u homeguard -phomeguard123 -e "SELECT 'Conex√£o homeguard OK' as status;" 2>/dev/null; then
    echo -e "${GREEN}‚úÖ Usu√°rio homeguard: Autentica√ß√£o local OK${NC}"
else
    echo -e "${RED}‚ùå Usu√°rio homeguard: Falha na autentica√ß√£o local${NC}"
fi

# Testar usu√°rio root
echo -e "${YELLOW}Testando usu√°rio root...${NC}"
if mysql -u root -proot123 -e "SELECT 'Conex√£o root OK' as status;" 2>/dev/null; then
    echo -e "${GREEN}‚úÖ Usu√°rio root: Autentica√ß√£o local OK${NC}"
else
    echo -e "${RED}‚ùå Usu√°rio root: Falha na autentica√ß√£o local${NC}"
fi

# Mostrar usu√°rios finais
echo -e "\n${BLUE}üë• Usu√°rios configurados:${NC}"
sudo mysql -e "SELECT User, Host, plugin FROM mysql.user WHERE User IN ('root', 'homeguard') ORDER BY User, Host;" 2>/dev/null

echo -e "\n${BLUE}üì° Testando conectividade de rede...${NC}"
RASPBERRY_IP=$(hostname -I | awk '{print $1}')
echo -e "${YELLOW}IP do Raspberry Pi: ${RASPBERRY_IP}${NC}"

# Verificar se a porta est√° aberta
if netstat -tlnp | grep -q ":3306"; then
    echo -e "${GREEN}‚úÖ Porta 3306 est√° aberta e ouvindo${NC}"
    netstat -tlnp | grep ":3306"
else
    echo -e "${RED}‚ùå Porta 3306 n√£o est√° ouvindo${NC}"
fi

echo -e "\n${BLUE}üìã INFORMA√á√ïES PARA DBEAVER:${NC}"
echo "======================================"
echo -e "${YELLOW}Host:${NC} ${RASPBERRY_IP}"
echo -e "${YELLOW}Port:${NC} 3306"
echo -e "${YELLOW}Database:${NC} homeguard"
echo -e "${YELLOW}Username:${NC} homeguard"
echo -e "${YELLOW}Password:${NC} homeguard123"
echo ""
echo -e "${YELLOW}OU usar ROOT:${NC}"
echo -e "${YELLOW}Username:${NC} root"
echo -e "${YELLOW}Password:${NC} root123"

echo -e "\n${BLUE}üß™ TESTE DO SEU MAC:${NC}"
echo "Execute do seu Mac:"
echo -e "${YELLOW}mysql -h ${RASPBERRY_IP} -P 3306 -u homeguard -phomeguard123 -e \"SHOW DATABASES;\"${NC}"
echo ""
echo -e "${YELLOW}ou${NC}"
echo -e "${YELLOW}mysql -h ${RASPBERRY_IP} -P 3306 -u root -proot123 -e \"SHOW DATABASES;\"${NC}"

echo -e "\n${GREEN}‚úÖ CORRE√á√ÉO DE AUTENTICA√á√ÉO CONCLU√çDA!${NC}"
echo -e "${BLUE}üéØ Agora tente conectar no DBeaver novamente${NC}"
